# [pandas] test_list to json strings.

Pseudocode / Step-by-Step Plan:

Import pandas and ast modules.

Read tool lists from tools_list_by_part.xlsx and standard time values from src/検査工数.xlsx.

Create a dictionary mapping each tool symbol (記号) to its standard time (標準工数).

For each row in the tools list:

Get the part number and the tool list (as a string).

If the tool list is empty, set total time to 0.

Otherwise, evaluate the tool list string to a Python list.

For each tool, if it has a standard time, add it to the total.

Save the part number, tool list, and total standard time to results.

Convert results to a DataFrame and write to an Excel file:
検査計画書品番_検査具リスト_合計標準工数.xlsx.

Short Explanation:
This code reads an Excel file listing part numbers and their associated tool lists, looks up the standard time for each tool, calculates the total standard time for each part number, and writes the results (part number, tool list, total time) to a new Excel file.

```python
import pandas as pd
import ast


df_tools = pd.read_excel('tools_list_by_part.xlsx')
df_kosu = pd.read_excel('src/検査工数.xlsx')

# 記号と標準工数の辞書
kosu_dict = df_kosu.set_index('記号')['標準工数'].to_dict()

results = []

for idx, row in df_tools.iterrows():
    plan_no = row['検査計画書品番']
    tools_list_str = row['検査具リスト']
    # 検査具リスト列そのまま保持
    tools_list_raw = tools_list_str

    # NaN（空欄）の場合は合計0
    if pd.isna(tools_list_str):
        total_time = 0
    else:
        tools_list = ast.literal_eval(tools_list_str)
        total_time = 0
        for tool in tools_list:
            if tool in kosu_dict and pd.notna(kosu_dict[tool]):
                total_time += float(kosu_dict[tool])
    results.append({
        '検査計画書品番': plan_no,
        '検査具リスト': tools_list_raw,
        '合計標準工数': total_time
    })

# DataFrame化してExcel出力
df_result = pd.DataFrame(results)
df_result.to_excel('検査計画書品番_検査具リスト_合計標準工数.xlsx', index=False)
```
